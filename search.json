[{"title":"markdown语法","path":"/2023/01/17/markdown语法/","content":"markDown语法初学1. 标题 markdown中的标题语法很简单 直接使用#+ space +标题内容即可 默认有六级标题，按照#的个数排列 123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 2. 内容设置1. 换行 markDown换行不需要特殊写法。直接新起一行即可。 或者在你想要换行的段落中间加一个空行以保持文档格式 效果： 这是第一行超长这是第一行超长这是第一行超长这是第一行超长这是第一行超长这是第一行超长这是第一行超长这是第一行超长这是第一行超长 这是第二行 2. 文字效果 markdown支持使用* _等特殊符号来进行文字效果。 也支持使用html标签来设置文字效果 斜体 *1* 效果： 1 _1_ 效果： 1 &lt;i&gt;1&lt;/i&gt; 效果：1 总结： *或_的效果是一致的，两个*或_将需要斜体的内容包裹起来 直接使用html i标签，用法与*的用法一致，使用i标签将内容包裹起来 粗体 **1** 效果：1 __1__效果：1 &lt;b&gt;1&lt;/b&gt;效果：1 总结： 与斜体的用法一致，只不过不是使用两个*包裹内容了，而是改为了四个，即内容两侧各有两个 标签语法就与斜体的一致 粗斜体 ***1*** 效果：1 ___1___效果：1 总结： 与斜体&#x2F;粗体的用法一致，内容两侧各有三个* 删除线 &lt;del&gt;delete&lt;/del&gt; 效果： delete ~~delete~~ 效果：delete 总结： 使用标签del 使用~~双波浪线 下划线 直接使用标签&lt;u&gt;&lt;/u&gt; 效果：演示 分隔线 在一行中使用三个以上*、-、_创建分隔线。该行中不能有其他东西。也可以在*或-之间插入空格 以下几种写法都可以成功创建分隔线 1234***---______* * * 实际效果 *** --- ______ 脚注 脚注是对文本的补充说明。以下为脚注的写法 1[^要进行标注的文本] 以下为用法 123脚注格式类似这样[^Hello World][^Hello World]: 百度一下啦 具体效果 脚注格式类似这样^Hello World 3. 列表 md支持有序列表与无序列表 无序列表 无序列表是使用*,+, -作为列表标记，后边跟个空格，然后跟上内容即可 语法： 1234567891011* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 效果： 第一项 第二项 第三项 第一项 第二项 第三项 第一项 第二项 第三项 有序列表 有序列表直接使用数字加上.再加上空格，最后跟上内容即可 语法： 1231. 第一项2. 第二项3. 第三项 效果： 第一项 第二项 第三项 列表嵌套 列表嵌套只需要在子列表前添加两个或四个空格即可 语法： 1234561. 第一项\t- 第一个元素\t- 第二个元素2. 第二项\t- 第一个元素\t- 第二个元素 效果： 第一项 第一个元素 第二个元素 第二项 第一个元素 第二个元素 4. 区块&#x2F;块引用 md区块在当前行开头添加&gt;符号+空格，然后跟上内容即可 语法： 123&gt; 块引用&gt; 这是第二行&gt; 这是第三行 效果： 块引用 这是第二行 这是第三行 区块也是可以进行嵌套操作的。 只需要继续当前行加&gt;+空格即可 语法： 123&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套 效果： 最外层 第一层嵌套 第二层嵌套","categories":["markdown"]},{"title":"快速创建属于自己的博客网站","path":"/2023/01/16/第一篇博客/","content":"1. 本地初始化 注意事项：使用hexo前需保证本地安装node与git 使用npm下载hexo（国内npm慢的话推荐使用pnpm进行安装） 1npm install hexo-cli -g 挑选自己心仪的主题（可选项） 主题官网： https://hexo.io/themes/主题的具体用法下文中会有讲解 编写自己的第一篇文章 使用命令行的方式创建第一篇文章 1hexo new [layout] &#x27;&lt;title&gt;&#x27; 2. 配置github 在github中创建一个空库 请注意：在设置仓库名称时，最好设置为[您的用户名].github.io设置这种仓库名是为了防止后期项目成功部署后静态资源找不到的情况 将本地项目上传至github仓库中 请先新创建1-2个新分支，后期部署时会用到 上传完成后在setting页签的侧边栏中找到pages选项 pages页面中会有几类配置项，我们目前主要修改’Build and deployment’配置项即可，其他暂时不动 ‘Build and deployment’中有个’Branch’选项，下拉选中一个分支，此时的这个分支就是我们发布的分支。注意这个分支不要进行提交操作。 第二个下拉项我们保持默认（即root） 3. 配置hexo自动部署 在项目中安装依赖包 hexo-deployer-git 1npm i hexo-deployer-git -S 在配置文件中添加配置信息 1234567deploy: type: git repo: https://github.com/&lt;username&gt;/&lt;此处对应的为新创建的git仓库名&gt; # example, https://github.com/hexojs/hexojs.github.io # 这里配置的分支就是自动部署时向远端推送的分支。 # 这里配置的分支需要与github中配置的分支保持一致 branch: master 当配置完成后，就可以执行package.json中hexo配置好的命令了 build 12// 此命令与vue 构建命令是同一种功能，将本地文件打包&quot;build&quot;: &quot;hexo generate&quot; clean 12// 清除本地build缓存等数据，防止出现打包异常的问题&quot;clean&quot;: &quot;hexo clean&quot; deploy 123// 将使用build命令构建出来的文件部署到git上// 部署的分支就是配置文件中配置的分支&quot;deploy&quot;: &quot;hexo deploy&quot; 当deploy成功执行后，稍等一两分钟后就可以正常访问了。","categories":["建站"]},{"title":"Hello World","path":"/2023/01/16/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]